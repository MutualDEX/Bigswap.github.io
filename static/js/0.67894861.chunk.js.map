{"version":3,"sources":["src/hooks/useLinker.tsx","src/components/Heading.tsx","src/components/ItemSeparator.tsx","src/components/Selectable.tsx","src/components/TokenLogo.tsx","src/components/Column.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/components/Border.tsx","src/components/CloseIcon.tsx","src/components/ErrorMessage.tsx","src/components/InfoBox.tsx","src/components/SelectIcon.tsx","src/components/Expandable.tsx","src/components/FetchingButton.tsx","src/components/Loading.tsx","src/components/Meta.tsx","src/components/TokenInput.tsx","assets/flags/us.png","assets/flags/cn.png","assets/flags/kr.png","assets/alchemy.png","src/components/Input.tsx","src/hooks/useDelayedOnBlockEffect.tsx","src/hooks/useWeth.tsx","src/hooks/useTokenPairState.tsx","assets/empty-token.png","assets/ETH.png","index.tsx"],"names":["Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","Heading","props","accent","useColors","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","buttonText","type","size","title","onPress","onPressButton","color","buttonStyle","paddingHorizontal","ITEM_SEPARATOR_HEIGHT","ItemSeparator","Selectable","borderDark","overlay","border","useStyles","background","backgroundLight","containerStyle","hovered","activeOpacity","underlayColor","selected","backgroundColor","TokenLogo","useState","error","setError","placeholder","require","ETH","source","replaceWETH","isWETH","token","uri","logoURI","width","borderRadius","onError","opacity","Column","View","marginTop","noTopMargin","large","normal","SocialIcon","darkMode","useContext","GlobalContext","textLight","light","iconColor","undefined","borderWidth","borderColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","FlexView","justifyContent","name","raised","reverse","reverseColor","flags","us","cn","kr","Flag","locale","location","useLocation","TouchableHighlight","pathname","marginHorizontal","Image","WebFooter","onPressAlchemy","padding","Text","note","Constants","manifest","version","Border","CloseIcon","marginLeft","ErrorMessage","code","message","InfoBox","SelectIcon","Expandable","t","useTranslation","expanded","setExpanded","shouldExpand","onExpand","display","children","FetchingButton","Loading","marginVertical","Meta","textMedium","url","suffix","label","textDecorationLine","MaxButton","onPressMax","balance","isETH","fee","pow10","gt","sub","ethers","constants","Zero","updateAmount","formatBalance","decimals","position","right","bottom","maxButtonText","symbol","TokenInput","onChangeText","onAmountChanged","parseBalance","e","endsWith","indexOf","length","value","amount","keyboardType","autoFocus","inputStyle","inputContainerStyle","borderBottomWidth","labelStyle","fontFamily","paddingTop","hideMaxButton","module","exports","Input","textDark","errors","forbidden","forEach","validation","match","regexp","allowed","join","minHeight","outline","placeholderTextColor","errorStyle","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","EthersContext","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","handle","clearTimeout","useWeth","wrapETH","signer","a","async","weth","getContract","WETH","address","estimateGas","deposit","gasLimit","tx","logTransaction","unwrapETH","withdraw","useTokenPairState","tokens","updateTokens","getTokenAllowance","fromSymbol","setFromSymbol","toSymbol","setToSymbol","fromAmount","setFromAmount","toAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","loading","setLoading","wrapping","setWrapping","unwrapping","setUnwrapping","fromToken","find","toToken","useEffect","minAllowance","BigNumber","from","pow","ROUTER","fromAllowance","gte","toAllowance","onWrap","wait","onUnwrap","isServer","process","hoverListener","hasMouse","refs","mousePosition","x","y","hover","hoverFunc","containsEvent","r","previousHoverFunc","unhover","document","event","add","ref","remove","createHoverListener","Hoverable","rest","hostRef","React","hr","setHovered","parent","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","scrollEventThrottle","forwardedRef","setRef","setLocalRef","getForwardedRef","setAndForwardRef","hostNode","interactionState"],"mappings":"uFAAA,mCAwBeA,IAAgB,QAAhBA,IAASC,GAlBH,SAACC,EAAcC,EAAeC,GAC/C,IAAMC,EAAUC,cAChB,OAAOC,uBAAY,WACXH,EACAI,OAAOC,KAAKP,EAAME,GAElBC,EAAQK,KAAKR,KAElB,CAACA,EAAME,KAGO,SAACF,EAAcC,EAAeQ,GAAsB,IAC7DC,EAAaC,0BAAbD,SACR,OAAOL,uBAAY,WACfK,EAAST,KACV,CAACA,M,kCCrBR,8DA2CeW,IAzBmB,SAAAC,GAAU,IAChCC,EAAWC,cAAXD,OACR,OACI,kBAAC,IAAD,CAAUE,MAAO,CAAEC,WAAY,WAAYC,OAAQ,GAAIC,aAAcN,EAAMO,SAAW,EAAIC,IAAQC,QAC9F,kBAAC,IAAD,CACIC,QAAQ,EACRC,WAAYX,EAAMW,YAAc,OAChCJ,SAAUP,EAAMO,SAChBJ,MAAO,CAAC,CAAES,KAAM,EAAGC,SAAUC,IAAa,GAAK,GAAIC,cAAeP,IAAQQ,MAAQhB,EAAMG,QACvFH,EAAMiB,MAEVjB,EAAMkB,YACH,kBAAC,IAAD,CACIC,KAAM,QACNC,KAAM,QACNC,MAAOrB,EAAMkB,WACbI,QAAStB,EAAMuB,cACfC,MAAOvB,EACPwB,YAAa,CAAEC,kBAAmBlB,IAAQQ,W,kCCpC9D,6DAGaW,EAAwB,GAItBC,IAFO,kBAAM,kBAAC,IAAD,CAAMzB,MAAO,CAAEE,OAAQsB,O,msBCiCpCE,IAxByB,SAAA7B,GAAU,IAAD,EACLE,cAAhC4B,EADqC,EACrCA,WAAY7B,EADyB,EACzBA,OAAQ8B,EADiB,EACjBA,QACpBC,EAAWC,cAAXD,OAFqC,EAGL9B,cAAhCgC,EAHqC,EAGrCA,WAAYC,EAHyB,EAGzBA,gBACpB,OACI,kBAAC,IAAD,CAAWhC,MAAOH,EAAMoC,iBACnB,gBAAGC,EAAH,EAAGA,QAAH,OACG,kBAAC,IAAD,CAAoBC,cAAe,GAAKC,cAAeR,EAAST,QAAStB,EAAMsB,SAC3E,kBAAC,IAAD,OACQtB,EADR,CAEIG,MAAO,CAAC,EAAD,KAEI6B,EAAO,CAAER,MAAOxB,EAAMwC,SAAWvC,EAAS6B,KAF9C,IAGCW,gBAAiBJ,IAAYrC,EAAMO,SAAW4B,EAAkBD,IAEpElC,EAAMG,gB,sGCgBnBuC,IAtCG,SAAC1C,GAMZ,IACsBO,EAAaL,cAA9BiC,gBADN,EAEwBQ,oBAAS,GAFjC,WAEKC,EAFL,KAEYC,EAFZ,KAGIzB,EAAOpB,EAAMS,MAAQ,GAAK,GAC1BqC,EAAcC,EAAQ,MACtBC,EAAMD,EAAQ,MACdE,EAASjD,EAAMkD,aAAeC,YAAOnD,EAAMoD,OAASJ,EAAM,CAAEK,IAAKrD,EAAMoD,MAAME,SACnF,OACI,kBAAC,IAAD,CACInD,MAAO,CACH,CACIoD,MAAOnC,EACPf,OAAQe,EACRqB,gBAAiBzC,EAAMO,SAAWA,EAAW,QAC7CiD,aAAcpC,EAAO,GAEzBpB,EAAMG,QAEV,kBAAC,IAAD,CACI8C,QAASjD,EAAMoD,MAAME,SAAWV,EAAQE,EAAcG,EACtDQ,QAAS,kBAAMZ,GAAS,IACxB1C,MAAO,CACHoD,MAAO,OACPlD,OAAQ,OACRmD,aAAcpC,EAAO,EACrBsC,QAAS1D,EAAMO,SAAW,GAAM,Q,yICfrCoD,EAbiB,SAAA3D,GAAK,OACjC,kBAAC4D,EAAA,EAAD,OACQ5D,EADR,CAEIG,MAAO,CACH,CACIoD,MAAO,OACPM,UAAW7D,EAAM8D,YAAc,EAAoB,QAAhB7E,IAASC,GAAesB,IAAQuD,MAAQvD,IAAQwD,QAEvFhE,EAAMG,W,kCCkBZ8D,EAAa,SAACjE,GAA4B,IACpCkE,EAAaC,qBAAWC,KAAxBF,SADmC,EAEThE,cAA1BgC,EAFmC,EAEnCA,WAAYmC,EAFuB,EAEvBA,UACpB,OACI,kBAAC,IAAD,OACQrE,EADR,CAEIsE,OAAQJ,EACRK,UAAWL,EAAW,aAAUM,EAChCrE,MAAO,CACHsC,gBAAiBP,EACjBuC,YAAa,EACbC,YAAaR,EAAW,QAAUG,OAMnCM,EA7CK,WAAO,IACfT,EAAaC,qBAAWC,KAAxBF,SADc,EAEYhE,cAA1BgC,EAFc,EAEdA,WAAYmC,EAFE,EAEFA,UACdO,EAAiBC,YAAU,gCAAiC,GAAI,UAChEC,EAAgBD,YAAU,+BAAgC,GAAI,UAC9DE,EAAiBF,YAAU,6BAA8B,GAAI,UACnE,OACI,kBAACG,EAAA,EAAD,CAAU7E,MAAO,CAAEoD,MAAO,OAAQ0B,eAAgB,WAC9C,kBAAC,EAAD,CAAY9D,KAAK,aAAaG,QAASwD,IACvC,kBAAC,EAAD,CAAY3D,KAAK,UAAUG,QAASsD,IACpC,kBAAC,IAAD,CACIzD,KAAM,qBACN+D,KAAM,UACNC,QAAQ,EACRC,SAAS,EACT5D,MAAOU,EACPmD,aAAcnB,EAAW,QAAU,UACnC/D,MAAO,CAAEsC,gBAAiBP,GAC1BE,eAAgB,CACZqC,YAAa,EACbC,YAAaR,EAAW,QAAUG,GAEtC/C,QAASyD,M,QCjBnBO,EAAQ,CACVC,GAAIxC,EAAQ,MACZyC,GAAIzC,EAAQ,MACZ0C,GAAI1C,EAAQ,OAgCV2C,EAAO,SAAC,GAAsB,IAApBR,EAAmB,EAAnBA,KAAMS,EAAa,EAAbA,OACZrG,EAAUC,cACVqG,EAAWC,cAIjB,OACI,kBAACC,EAAA,EAAD,CAAoBxE,QAJR,WACZhC,EAAQK,KAAKiG,EAASG,SAAW,WAAaJ,IAGRxF,MAAO,CAAE6F,iBAAkB,IAC7D,kBAACC,EAAA,EAAD,CAAOhD,OAAQqC,EAAMJ,GAAO/E,MAAO,CAAEoD,MAAO,GAAIlD,OAAQ,QAKrD6F,IA1CG,WACd,IAAMC,EAAiBtB,YACnB,uFACA,GACA,UAEJ,OACI,kBAAC,EAAD,CAAQf,aAAa,GACjB,kBAACF,EAAA,EAAD,CAAMzD,MAAO,CAAEoD,MAAO,OAAQ6C,QAAS5F,IAAQwD,OAAQ5D,WAAY,WAC/D,kBAAC,EAAD,MACA,kBAAC0F,EAAA,EAAD,CAAoBxE,QAAS6E,GACzB,kBAACF,EAAA,EAAD,CACIhD,OAAQF,EAAQ,MAChB5C,MAAO,CAAEoD,MAAO,IAAKlD,OAAQ,GAAIwD,UAAWrD,IAAQQ,SAG5D,kBAACqF,EAAA,EAAD,CAAMC,MAAM,EAAMnG,MAAO,CAAE0D,UAAWrD,IAAQQ,OAA9C,0CACkCuF,IAAUC,SAASC,QADrD,KAGA,kBAACzB,EAAA,EAAD,CAAU7E,MAAO,CAAE0D,UAAWrD,IAAQC,QAClC,kBAAC,EAAD,CAAMyE,KAAM,KAAMS,OAAQ,OAC1B,kBAAC,EAAD,CAAMT,KAAM,KAAMS,OAAQ,OAC1B,kBAAC,EAAD,CAAMT,KAAM,KAAMS,OAAQ,Y,kCCzC9C,2CAqBee,IAfA,SAAA1G,GAAU,IACbgC,EAAW9B,cAAX8B,OACR,OACI,kBAAC,IAAD,CACI7B,MAAO,CACHE,OAAQ,EACRkD,MAAO,OACPd,gBAAiBT,EACjB6B,UAAW7D,EAAMS,MAAQD,IAAQQ,KAAOR,IAAQC,MAChDH,aAAcN,EAAMS,MAAQD,IAAQQ,KAAOR,IAAQC,MAAQD,IAAQQ,U,kCCfnF,qCAUe2F,IALG,WAAO,IACb1G,EAAWC,cAAXD,OACR,OAAO,kBAAC,IAAD,CAAMkB,KAAM,qBAAsB+D,KAAM,QAAS1D,MAAOvB,EAAQE,MAAO,CAAEyG,WAAY,O,kCCPhG,2CA2BeC,IApBM,SAAC,GAAD,IAAGjE,EAAH,EAAGA,MAAH,OACjB,kBAAC,IAAD,CACIzC,MAAO,CACHuE,YAAa,MACbD,YAAa,EACblB,MAAO,OACP6C,QAAS5F,IAAQQ,KACjB6C,UAAWrD,IAAQC,QAEtBmC,EAAMkE,MACH,kBAAC,IAAD,CAAMnG,WAAY,OAAQR,MAAO,CAAEqB,MAAO,MAAOX,SAAU,KAA3D,cACgB+B,EAAMkE,MAG1B,kBAAC,IAAD,CAAMR,MAAM,EAAMnG,MAAO,CAAEqB,MAAO,MAAOX,SAAU,KAC9C+B,EAAMmE,Y,isBCMJC,IApBC,SAAChH,GAAyC,IAC9CkE,EAAaC,qBAAWC,KAAxBF,SAD6C,EAEbhE,cAAhCiC,EAF6C,EAE7CA,gBAAiBL,EAF4B,EAE5BA,WACjBE,EAAWC,cAAXD,OACR,OACI,kBAAC,IAAD,OACQhC,EADR,CAEIG,MAAO,CAAC,EAAD,KAEI6B,EAAO,CAAER,MAAO0C,EAAWpC,EAAaK,KAF5C,IAGCM,gBAAiBN,EACjB0B,UAAWrD,IAAQwD,OAASxD,IAAQC,MACpC2F,QAAS5F,IAAQC,MAAQD,IAAQQ,OAErChB,EAAMG,Y,kCCtBtB,qCAUe8G,IALI,WAAO,IACdhH,EAAWC,cAAXD,OACR,OAAO,kBAAC,IAAD,CAAMkB,KAAM,qBAAsB+D,KAAM,gBAAiB1D,MAAOvB,EAAQE,MAAO,CAAEyG,WAAY,O,gGCyBzFM,IAlByB,SAAAlH,GACpC,IAAMmH,EAAIC,cADmC,EAEbzE,oBAAS,GAFI,WAEtC0E,EAFsC,KAE5BC,EAF4B,KAGvCC,EAAevH,EAAMqH,UAAYA,EACjCnG,EAAaqG,OAAe/C,EAAY2C,EAAE,UAMhD,OACI,kBAAC,IAAD,CAAMhH,MAAOH,EAAMG,OACf,kBAAC,IAAD,CAASc,KAAMjB,EAAMqB,MAAOH,WAAYA,EAAYK,cAP5C,WACZ+F,GAAY,GACZ,MAAAtH,EAAMwH,UAANxH,EAAMwH,cAMF,kBAAC,IAAD,CAAMrH,MAAO,CAAEsH,QAASF,EAAe,OAAS,SAAWvH,EAAM0H,a,kCC3B7E,qCASeC,IAJQ,WACnB,IAAMR,EAAIC,cACV,OAAO,kBAAC,IAAD,CAAQ/F,MAAO8F,EAAE,YAAa5G,UAAU,M,kCCPnD,oCAOeqH,IAFC,kBAAM,kBAAC,IAAD,CAAmBxG,KAAM,QAASjB,MAAO,CAAE0H,eAAgBrH,IAAQuD,W,kCCLzF,+DA0Ce+D,IA1Ba,SAAA9H,GAAU,IAAD,EACcE,cAAvC6H,EADyB,EACzBA,WAAY1D,EADa,EACbA,UAAWvB,EADE,EACFA,YACzBxB,EAAUuD,YAAU7E,EAAMgI,KAAO,GAAI,GAAI,UACzC/G,EAAOjB,EAAMO,SACb,MACAP,EAAMiB,KACNjB,EAAMiB,MAAQjB,EAAMiI,OAAS,IAAMjI,EAAMiI,OAAS,IAClD,iBACN,OACI,kBAAC,IAAD,CAAU9H,MAAO,CAAE8E,eAAgB,gBAAiBpB,UAAW,IAC3D,kBAAC,IAAD,CAAMyC,MAAOxF,IAAYH,WAAY,OAAQR,MAAO,CAAEqB,MAAOxB,EAAMO,SAAWuC,EAAciF,IACvF/H,EAAMkI,OAEX,kBAAC,IAAD,CACI5B,MAAOxF,IACPQ,QAAStB,EAAMgI,IAAM1G,OAAUkD,EAC/BrE,MAAO,CACHqB,MAAOxB,EAAMO,SAAWuC,EAAc9C,EAAMiB,KAAO8G,EAAa1D,EAChE8D,mBAAoBnI,EAAMgI,IAAM,YAAc,SAEjD/G,M,6tBCXjB,IAkDMmH,EAAY,SAACpI,GAAmE,IAC1EC,EAAWC,cAAXD,OACFoI,EAAa7I,uBAAY,WAC3B,GAAIQ,EAAMoD,MAAO,CACb,IAAIkF,EAAUtI,EAAMoD,MAAMkF,QAC1B,GAAIC,YAAMvI,EAAMoD,OAAQ,CAEpB,IAAMoF,EAAMC,YAAM,IAClBH,EAAUA,EAAQI,GAAGF,GAAOF,EAAQK,IAAIH,GAAOI,SAAOC,UAAUC,KAEpE9I,EAAM+I,aAAaC,YAAcV,EAAStI,EAAMoD,MAAM6F,cAE3D,CAACjJ,EAAMoD,MAAOpD,EAAM+I,eACvB,OACI,kBAAC,IAAD,CAAM5I,MAAO,CAAE+I,SAAU,WAAYC,MAAO,GAAIC,OAAwB,QAAhBnK,IAASC,GAAe,GAAK,KACjF,kBAAC,IAAD,CACIiC,KAAM,QACNC,KAAM,QACNI,MAAOvB,EACPoB,MAAOrB,EAAMqJ,gBAAkBvI,IAAa,OAASd,EAAMoD,MAAMkG,OAAS,OAC1E3I,WAAY,OACZW,QAAS+G,EACT5G,YAAa,CAAEC,kBAAmBlB,IAAQQ,UAM3CuI,IA9EyB,SAAAvJ,GAAU,IAAD,IACrCgC,EAAWC,cAAXD,OACFwH,EAAehK,uBACjB,SAACyB,GACG,GAAIjB,EAAMoD,OAASpD,EAAMyJ,gBACrB,IACIC,YAAazI,EAAMjB,EAAMoD,MAAM6F,UAC/BjJ,EAAMyJ,gBAAgBxI,GACxB,MAAO0I,GACD1I,EAAK2I,SAAS,MAAQ3I,EAAK4I,QAAQ,OAAS5I,EAAK6I,OAAS,GAC1D9J,EAAMyJ,gBAAgBxI,MAKtC,CAACjB,EAAMoD,MAAOpD,EAAMyJ,kBAExB,OACI,kBAAC,IAAD,KACKzJ,EAAMqB,OAAS,kBAAC,IAAD,CAASJ,KAAMjB,EAAMqB,QACrC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI6G,MAAOlI,EAAMkI,MACb6B,MAAO/J,EAAMgK,OACbR,aAAcA,EACd1G,YAAa,MACbmH,aAAc,UACdC,UAAWlK,EAAMkK,YAAa,EAC9BC,WAAY,CAAEnE,iBAAkBxF,IAAQQ,MACxCoJ,oBAAqB,CAAEC,kBAAmB,GAC1CC,WAAY,CAAEC,WAAY,QAASlK,OAAQL,EAAMkI,MAAQ,OAAS,GAClE9F,eAAc,OACPJ,KADO,IAEVN,kBAAmBlB,IAAQQ,KAC3BwJ,WAAY,GACZzJ,cAAe,OAGtB,SAAAf,EAAMoD,QAAN,WAAakF,cAAb,IAAsBI,GAAG,MAAO1I,EAAMyK,eACnC,kBAACrC,EAAD,CACIhF,MAAOpD,EAAMoD,MACbiG,cAAerJ,EAAMqJ,cACrBN,aAAc/I,EAAMyJ,sB,qBCnE5CiB,EAAOC,QAAU,IAA0B,gC,qBCA3CD,EAAOC,QAAU,IAA0B,gC,qBCA3CD,EAAOC,QAAU,IAA0B,gC,qBCA3CD,EAAOC,QAAU,IAA0B,qC,gGCoE5BC,IAhDe,SAAA5K,GAAU,IAAD,EACSE,cAApC2K,EAD2B,EAC3BA,SAAU9C,EADiB,EACjBA,WAAY1D,EADK,EACLA,UACxBjD,EAAOpB,EAAMoB,MAAQ,SACrBI,EAAQxB,EAAMwB,OAASqJ,EACvBhK,EAAoB,UAATO,EAAmB,GAAc,UAATA,EAAmB,GAAK,GAC3DoI,EAAehK,uBACjB,SAACyB,GACG,MAAAjB,EAAMwJ,cAANxJ,EAAMwJ,aAAevI,GACrB,MAAAjB,EAAMyD,SAANzD,EAAMyD,QAAU,IAChB,IAAMqH,EAAS,GACF,KAAT7J,GAAejB,EAAM+K,WACrB/K,EAAM+K,UAAUC,SAAQ,SAAAC,GAChBhK,EAAKiK,MAAMD,EAAWE,SACtBL,EAAOnL,KAAKsL,EAAWrI,UAItB,KAAT3B,GAAejB,EAAMoL,SACrBpL,EAAMoL,QAAQJ,SAAQ,SAAAC,GACbhK,EAAKiK,MAAMD,EAAWE,SACvBL,EAAOnL,KAAKsL,EAAWrI,UAI/BkI,EAAOhB,OAAS,IAChB,MAAA9J,EAAMyD,SAANzD,EAAMyD,QAAUqH,EAAOO,KAAK,UAGpC,CAACrL,EAAMwJ,aAAcxJ,EAAMyD,QAASzD,EAAM+K,UAAW/K,EAAMoL,UAE/D,OACI,kBAAC,IAAD,OACQpL,EADR,CAEImK,WAAY,CACR,CAAEtJ,WAAU0J,WAAY,UAAWxJ,cAAe,EAAGS,QAAOqC,UAAW,EAAGyH,UAAW,IAErE,QAAhBrM,IAASC,GAAe,CAAEqM,QAAS,QAAW,GAC9CvL,EAAMmK,YAEVG,WAAY,CAAC,CAAE9I,MAAOuG,GAAc/H,EAAMsK,YAC1CkB,qBAAsBxL,EAAMwL,sBAAwBnH,EACpDoH,WAAYzL,EAAMyD,QAAU,CAAEpD,OAAQ,GAAML,EAAMyL,WAClDrJ,eAAgB,CAAC,CAAEV,kBAAmB,GAAK1B,EAAMoC,gBACjDoH,aAAcA,O,kCC/D1B,qCA8BekC,IAzBiB,SAC5BC,EACAC,EACAC,GAEE,IADFC,EACC,uDADgB,IAChB,EACqD3H,qBAAW4H,KAAzDC,EADP,EACOA,mBAAoBC,EAD3B,EAC2BA,sBACtBC,EAAYN,IAClBO,KACI,WACI,MAAO,CACHC,WAAWT,EAAQG,GACnBM,YAAW,kBAAMJ,EAAmBE,EAAWP,KAASG,OAGhE,SAAAO,GACQA,IACAA,EAAQrB,SAAQ,SAAAsB,GAAM,OAAIC,aAAaD,MACvCL,EAAsBC,MAG9BL,K,iJCSOW,EA5BC,WAsBZ,MAAO,CACHC,QAtBYjN,uBAAY,SAAOwK,EAA0B0C,GAAjC,mBAAAC,EAAAC,OAAA,uDAClBC,EAAOC,YAAY,QAASC,IAAK,GAAGC,QAASN,GAD3B,WAAAC,EAAA,MAEDE,EAAKI,YAAYC,QAAQ,CAC5CnD,MAAOC,KAHa,cAElBmD,EAFkB,kBAAAR,EAAA,MAKPE,EAAKK,QAAQ,CAC1BnD,MAAOC,EACPmD,cAPoB,cAKlBC,EALkB,kBAAAT,EAAA,MASXU,YAAeD,EAAI,mBATR,uGAUzB,IAaCE,UAXc9N,uBAAY,SAAOwK,EAA0B0C,GAAjC,mBAAAC,EAAAC,OAAA,uDACpBC,EAAOC,YAAY,QAASC,IAAK,GAAGC,QAASN,GADzB,WAAAC,EAAA,MAEHE,EAAKI,YAAYM,SAASvD,IAFvB,cAEpBmD,EAFoB,kBAAAR,EAAA,MAGTE,EAAKU,SAASvD,EAAQ,CACnCmD,cAJsB,cAGpBC,EAHoB,kBAAAT,EAAA,MAMbU,YAAeD,EAAI,oBANN,uGAO3B,MCgHQI,IA1GiC,WAAO,IAAD,EACmBrJ,qBAAW4H,KAAxEW,EAD0C,EAC1CA,OAAQM,EADkC,EAClCA,QAASS,EADyB,EACzBA,OAAQC,EADiB,EACjBA,aAAcC,EADG,EACHA,kBADG,EAEnBnB,IAAvBC,EAF0C,EAE1CA,QAASa,EAFiC,EAEjCA,UAFiC,EAGd3K,mBAAS,IAHK,WAG3CiL,EAH2C,KAG/BC,EAH+B,OAIlBlL,mBAAS,IAJS,WAI3CmL,EAJ2C,KAIjCC,EAJiC,OAKdpL,mBAAS,IALK,WAK3CqL,EAL2C,KAK/BC,EAL+B,OAMlBtL,mBAAS,IANS,WAM3CuL,EAN2C,KAMjCC,EANiC,OAOFxL,oBAAS,GAPP,WAO3CyL,EAP2C,KAOzBC,EAPyB,OAQN1L,oBAAS,GARH,WAQ3C2L,EAR2C,KAQ3BC,EAR2B,OASpB5L,oBAAS,GATW,WAS3C6L,EAT2C,KASlCC,EATkC,OAUlB9L,oBAAS,GAVS,WAU3C+L,EAV2C,KAUjCC,EAViC,OAWdhM,oBAAS,GAXK,WAW3CiM,EAX2C,KAW/BC,EAX+B,KAa5CC,GAAYrB,EAAOsB,MAAK,SAAA3L,GAAK,OAAIA,EAAMkG,SAAWsE,KAClDoB,GAAUvB,EAAOsB,MAAK,SAAA3L,GAAK,OAAIA,EAAMkG,SAAWwE,KAEtDmB,qBAAU,WACa,KAAfrB,GACAG,EAAY,IAEhBE,EAAc,IACdE,EAAY,MACb,CAACP,EAAYE,IAEhBmB,qBAAU,WACNpB,EAAc,MACf,CAACb,IAEJb,KAAe,8BAAAQ,EAAAC,OAAA,qDACPkC,IAAaE,IAAWtC,GADjB,oBAEP2B,GAAoB,GACpBE,GAAkB,GAClBE,GAAW,GAJJ,SAMGS,EAAetG,SAAOuG,UAAUC,KAAK,GACtCC,IAAI,IACJ1G,IAAI,GACJJ,YAAMuG,IATR,mCAAAnC,EAAA,MAU6BgB,EAAkBmB,GAAU9B,QAASsC,MAVlE,OAUOC,EAVP,OAWClB,EAAoBzF,SAAOuG,UAAUC,KAAKG,GAAeC,IAAIN,IAX9D,WAaE3G,YAAMyG,IAbR,oCAAArC,EAAA,MAc2BgB,EAAkBqB,GAAQhC,QAASsC,MAd9D,QAcOG,EAdP,OAeClB,EAAkB3F,SAAOuG,UAAUC,KAAKK,GAAaD,IAAIN,IAf1D,yBAkBHT,GAAW,GAlBR,oFAqBZ,CAACK,GAAWE,GAAStC,IAExB,IAAMgD,GAASlQ,uBAAY,0BAAAmN,EAAAC,OAAA,oDACnBoB,IAActB,EADK,wBAEnBiC,GAAY,GAFO,oBAAAhC,EAAA,MAIEF,EAAQ/C,YAAasE,GAAatB,IAJpC,YAITU,EAJS,2CAAAT,EAAA,MAMLS,EAAGuC,QANE,0BAAAhD,EAAA,MAOLe,KAPK,QAQXG,EAAc,IARH,yBAWfc,GAAY,GAXG,oFAcxB,CAACX,EAAYtB,IAEVkD,GAAWpQ,uBAAY,0BAAAmN,EAAAC,OAAA,oDACrBoB,IAActB,EADO,wBAErBmC,GAAc,GAFO,oBAAAlC,EAAA,MAIAW,EAAU5D,YAAasE,GAAatB,IAJpC,YAIXU,EAJW,2CAAAT,EAAA,MAMPS,EAAGuC,QANI,0BAAAhD,EAAA,MAOPe,KAPO,QAQbG,EAAc,IARD,yBAWjBgB,GAAc,GAXG,oFAc1B,CAACb,EAAYtB,IAEhB,MAAO,CACHkB,aACAC,gBACAC,WACAC,cACAe,aACAE,WACAhB,aACAC,gBACAC,WACAC,cACAC,mBACAC,sBACAC,iBACAC,oBACAC,UACAkB,UACAhB,WACAkB,YACAhB,gB,qBCvIRlE,EAAOC,QAAU,IAA0B,yC,qBCA3CD,EAAOC,QAAU,IAA0B,iC,8wDCoB3C,IAAMkF,EACJ,qBAAOC,GACPA,EADA,SADF,SAGEA,eAEIC,EAwGN,WACE,IAGA,EAHIC,GAAWH,GAAmBpQ,oCAAlC,QAEIwQ,EAAO,IAAX,IAEIC,EAAgB,CAClBC,EADkB,EAElBC,EAAG,GAGL,SAASC,EAAMhR,GAEb,IAAIiR,EAAYL,MAFU,GAK1B,MACE,cAAcA,EAAd,uBAA2B,CAAC,IAA5B,EAA2B,QACrBM,EAAcC,EAAlB,KACEF,EAAYL,MAAZK,IAKNG,GAAqBA,GAArBA,GACAH,GAAaA,GAda,GAiB1BG,IAOF,SAASC,IACPD,GAAqBA,GAArBA,GAWF,IACEE,qBAjBF,SAAoBC,GAClBP,EAAMO,EAANP,SAiBAM,qBAVF,SAA8BC,GAC5BV,IAAkBU,EAAlBV,MACAA,IAAkBU,EAAlBV,OASAS,wBACAA,sBACAA,yBACAA,wBAWF,MAAO,CACLE,IATF,SAAaC,EAAb,GACEb,YASAc,OANF,SAAgBD,GACdb,aAMAC,gBACAG,SA3KkBW,GA0Bf,SAASC,EAAU,GAAwC,IAAxC,EAAuC,EAAvC,SAAeC,EAAwB,oBACzDC,EAAUC,SAAhB,MAD+D,EAEjCA,YAA9B,GAF+D,WAEzD,EAFyD,KAEzD,EAFyD,KAW/D,OARAA,aAAgB,WACd,IAAMC,EAAKF,EAAX,QAEA,OADApB,WACO,WACLA,eAED,CAACuB,EANJF,IASE,uBACEN,IADF,EAEEpJ,SACE,oBAAOA,EAA0BA,EAAS,CAAErF,YAAaqF,GAJ/D,IAoDF,SAAS6I,EAAcgB,EAAvB,GACE,GAAIA,IAAJ,EACE,OAAO,EAET,MACE,OAAO,EAET,cAAkBA,EAAlB,2BAAqC,CACnC,GAAIhB,EAD+B,QACnC,GACE,OAAO,EAGX,OAAO,EA0FT,SAASiB,EAAkBC,GACzB,IAAMC,EAAqB,SAAC,GAKhB,IALgB,EAKjB,EALiB,eAKjB,EALiB,WAKjB,EALiB,oBAIvBR,EACM,yDAMT,OACE,qBACEJ,IADF,EAEEa,SARmBhI,YACrBgI,GAAYA,EAAZA,GADgC,IAE1B,EAAN,EAAM,eACNtB,EADA,EAAuBA,OACjBM,0BAA0BT,EAA1BS,EAA2CT,EAAjDG,KAMEuB,oBAAqBA,GAAuB,IAJhD,KAUF,OAAO,cAAiB,cACtB,OAAO,0BAA+BC,aAAcf,QAI/BM,cA1KzB,SAA6B,EAA7B,GAGG,IAFD,EAEA,EAFA,QAEA,EAFA,SAAsBF,EAEtB,4BACMC,EAAUC,SAAhB,MADA,EAE8BA,YAA9B,GAFA,WAEM,EAFN,KAEM,EAFN,KAIMU,EAwHR,SAA0B,GAAwC,IAAxC,EAAuC,EAAvC,gBAAmBC,EAAoB,EAApBA,YAC3C,OAAO,YACL,IAAMF,EAAeG,IACrBD,EAFqD,GAKrD,oBAAWF,EAETA,KACS,kBAAOA,GAAX,MAAwCA,IAE7CA,cAnIWI,CAAiB,CAC9BD,gBAAiB,kBADa,GAE9BD,YAAcG,YACZf,eAYJ,OARAC,aAAgB,WACd,IAAMC,EAAKF,EAAX,QAEA,OADApB,WACO,WACLA,eAED,CAACuB,EANJF,IASE,uBAEEN,IAFF,EAGE3Q,MAAQgS,YAAD,MACL,sBACIhS,EAAM,EAAD,KAAC,GAAD,IAAwBkC,aALrC,GAQEqF,SAAWyK,YAAD,MACR,sBACIzK,EAAS,EAAD,KAAC,GAAD,IAAwBrF,aAChCqF,IAZV,OAqJwB8J,EAAnB,KAGiBA,EAAjB,KAGwBA,EAAxB,O","file":"static/js/0.67894861.chunk.js","sourcesContent":["import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n    style?: TextStyle;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={props.fontWeight || \"bold\"}\n                disabled={props.disabled}\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 24 : 18, paddingBottom: Spacing.tiny }, props.style]}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps, ViewStyle } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n    containerStyle?: ViewStyle;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent, overlay } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLight } = useColors();\n    return (\n        <Hoverable style={props.containerStyle}>\n            {({ hovered }) => (\n                <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : borderDark }),\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\nimport Token from \"../types/Token\";\nimport { isWETH } from \"../utils\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const { backgroundLight: disabled } = useColors();\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && isWETH(props.token) ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? disabled : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={!props.token.logoURI || error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/sushiswap\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/sushiswap\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/YS8xH7E\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { Image, TouchableHighlight, View } from \"react-native\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport Constants from \"expo-constants\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport useLinker from \"../../hooks/useLinker\";\nimport Column from \"../Column\";\nimport FlexView from \"../FlexView\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst flags = {\n    us: require(\"../../../assets/flags/us.png\"),\n    cn: require(\"../../../assets/flags/cn.png\"),\n    kr: require(\"../../../assets/flags/kr.png\")\n};\n\nconst WebFooter = () => {\n    const onPressAlchemy = useLinker(\n        \"https://dashboard.alchemyapi.io/signup?referral=429fb682-0d85-40ab-ad88-daf847cf7c63\",\n        \"\",\n        \"_blank\"\n    );\n    return (\n        <Column noTopMargin={true}>\n            <View style={{ width: \"100%\", padding: Spacing.normal, alignItems: \"center\" }}>\n                <SocialIcons />\n                <TouchableHighlight onPress={onPressAlchemy}>\n                    <Image\n                        source={require(\"../../../assets/alchemy.png\")}\n                        style={{ width: 188, height: 40, marginTop: Spacing.tiny }}\n                    />\n                </TouchableHighlight>\n                <Text note={true} style={{ marginTop: Spacing.tiny }}>\n                    Built with ❤️ by SushiSwap (v{Constants.manifest.version})\n                </Text>\n                <FlexView style={{ marginTop: Spacing.small }}>\n                    <Flag name={\"us\"} locale={\"en\"} />\n                    <Flag name={\"cn\"} locale={\"zh\"} />\n                    <Flag name={\"kr\"} locale={\"ko\"} />\n                </FlexView>\n            </View>\n        </Column>\n    );\n};\n\nconst Flag = ({ name, locale }) => {\n    const history = useHistory();\n    const location = useLocation();\n    const onPress = () => {\n        history.push(location.pathname + \"?locale=\" + locale);\n    };\n    return (\n        <TouchableHighlight onPress={onPress} style={{ marginHorizontal: 4 }}>\n            <Image source={flags[name]} style={{ width: 30, height: 20 }} />\n        </TouchableHighlight>\n    );\n};\n\nexport default WebFooter;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = props => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst CloseIcon = () => {\n    const { accent } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={accent} style={{ marginLeft: 4 }} />;\n};\n\nexport default CloseIcon;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React, { PropsWithChildren, useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { backgroundLight, borderDark } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: darkMode ? borderDark : backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    marginTop: Spacing.normal + Spacing.small,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst SelectIcon = () => {\n    const { accent } = useColors();\n    return <Icon type={\"material-community\"} name={\"chevron-right\"} color={accent} style={{ marginLeft: 4 }} />;\n};\n\nexport default SelectIcon;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const t = useTranslation();\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : t(\"change\");\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    const t = useTranslation();\n    return <Button title={t(\"fetching\")} disabled={true} />;\n};\nexport default FetchingButton;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React, { FC } from \"react\";\n\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"N/A\"\n        : props.text\n        ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n        : \"Fetching…\";\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\n            <Text note={!IS_DESKTOP} fontWeight={\"bold\"} style={{ color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                note={!IS_DESKTOP}\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\"\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isETH, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    keyboardType={\"numeric\"}\n                    autoFocus={props.autoFocus || false}\n                    inputStyle={{ marginHorizontal: Spacing.tiny }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 15,\n                        paddingBottom: 2\n                    }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(() => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (isETH(props.token)) {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 12 : 24 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || (IS_DESKTOP ? \"MAX \" + props.token.symbol : \"MAX\")}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\n","module.exports = __webpack_public_path__ + \"static/media/us.d367121f.png\";","module.exports = __webpack_public_path__ + \"static/media/cn.baedda5d.png\";","module.exports = __webpack_public_path__ + \"static/media/kr.146730ea.png\";","module.exports = __webpack_public_path__ + \"static/media/alchemy.5bf96491.png\";","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                { fontSize, fontFamily: \"regular\", paddingBottom: 4, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import { useCallback } from \"react\";\n\nimport { WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\nconst useWeth = () => {\n    const wrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.deposit({\n            value: amount\n        });\n        const tx = await weth.deposit({\n            value: amount,\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.deposit()\");\n    }, []);\n\n    const unwrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.withdraw(amount);\n        const tx = await weth.withdraw(amount, {\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.withdraw()\");\n    }, []);\n\n    return {\n        wrapETH,\n        unwrapETH\n    };\n};\n\nexport default useWeth;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { isETH, parseBalance } from \"../utils\";\nimport useWeth from \"./useWeth\";\n\nexport interface TokenPairState {\n    fromSymbol: string;\n    setFromSymbol: (symbol: string) => void;\n    toSymbol: string;\n    setToSymbol: (symbol: string) => void;\n    fromToken?: Token;\n    toToken?: Token;\n    fromAmount: string;\n    setFromAmount: (amount: string) => void;\n    toAmount: string;\n    setToAmount: (amount: string) => void;\n    fromTokenAllowed: boolean;\n    setFromTokenAllowed: (allowed: boolean) => void;\n    toTokenAllowed: boolean;\n    setToTokenAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onWrap: () => Promise<void>;\n    wrapping: boolean;\n    onUnwrap: () => Promise<void>;\n    unwrapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useTokenPairState: () => TokenPairState = () => {\n    const { signer, address, tokens, updateTokens, getTokenAllowance } = useContext(EthersContext);\n    const { wrapETH, unwrapETH } = useWeth();\n    const [fromSymbol, setFromSymbol] = useState(\"\");\n    const [toSymbol, setToSymbol] = useState(\"\");\n    const [fromAmount, setFromAmount] = useState(\"\");\n    const [toAmount, setToAmount] = useState(\"\");\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [wrapping, setWrapping] = useState(false);\n    const [unwrapping, setUnwrapping] = useState(false);\n\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\n    const toToken = tokens.find(token => token.symbol === toSymbol);\n\n    useEffect(() => {\n        if (fromSymbol === \"\") {\n            setToSymbol(\"\");\n        }\n        setFromAmount(\"\");\n        setToAmount(\"\");\n    }, [fromSymbol, toSymbol]);\n\n    useEffect(() => {\n        setFromSymbol(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (fromToken && toToken && signer) {\n            setFromTokenAllowed(false);\n            setToTokenAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                if (!isETH(fromToken)) {\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\n                }\n                if (!isETH(toToken)) {\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [fromToken, toToken, signer]);\n\n    const onWrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setWrapping(true);\n            try {\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setWrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    const onUnwrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setUnwrapping(true);\n            try {\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setUnwrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    return {\n        fromSymbol,\n        setFromSymbol,\n        toSymbol,\n        setToSymbol,\n        fromToken,\n        toToken,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        fromTokenAllowed,\n        setFromTokenAllowed,\n        toTokenAllowed,\n        setToTokenAllowed,\n        loading,\n        onWrap,\n        wrapping,\n        onUnwrap,\n        unwrapping\n    };\n};\n\nexport default useTokenPairState;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n"],"sourceRoot":""}